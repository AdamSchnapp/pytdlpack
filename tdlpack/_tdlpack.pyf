!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module _tdlpack ! in 
    interface  ! in :_tdlpack
        subroutine closefile(lun,ftype,ier) ! in :_tdlpack:closefile.f
            integer intent(in) :: lun
            integer intent(in) :: ftype
            integer intent(out) :: ier
        end subroutine closefile
        subroutine openfile(file,mode,l3264b,lun,byteorder,ftype,ier,ra_maxent,ra_nbytes) ! in :_tdlpack:openfile.f
            character*(*) intent(in) :: file
            character*(*) intent(in) :: mode
            integer intent(in) :: l3264b
            integer intent(out) :: lun
            integer intent(in,out) :: byteorder
            integer intent(in,out) :: ftype
            integer intent(out) :: ier
            integer, optional,intent(in) :: ra_maxent
            integer, optional,intent(in) :: ra_nbytes
        end subroutine openfile
        subroutine pack(kfildo,ic,nxy,is0,is1,is2,is4,nd7,ipack,nd5,second,ifirst,ifod,missp,misss,minpk,lx,ioctet,l3264b,ier) ! in :_tdlpack:pack.f
            integer :: kfildo
            integer dimension(nxy) :: ic
            integer, optional,check(len(ic)>=nxy),depend(ic) :: nxy=len(ic)
            integer dimension(nd7) :: is0
            integer dimension(nd7),depend(nd7) :: is1
            integer dimension(nd7),depend(nd7) :: is2
            integer dimension(nd7),depend(nd7) :: is4
            integer, optional,check(len(is0)>=nd7),depend(is0) :: nd7=len(is0)
            integer dimension(nd5) :: ipack
            integer, optional,check(len(ipack)>=nd5),depend(ipack) :: nd5=len(ipack)
            logical :: second
            integer :: ifirst
            integer :: ifod
            integer :: missp
            integer :: misss
            integer :: minpk
            integer :: lx
            integer :: ioctet
            integer :: l3264b
            integer :: ier
        end subroutine pack
        subroutine pack1d(kfildo,a,ic,nsta,is0,is1,is2,is4,nd7,xmissp,xmisss,ipack,nd5,minpk,lx,ioctet,l3264b,ier) ! in :_tdlpack:pack1d.f
            integer :: kfildo
            real dimension(nsta) :: a
            integer dimension(nsta),depend(nsta) :: ic
            integer, optional,check(len(a)>=nsta),depend(a) :: nsta=len(a)
            integer dimension(nd7) :: is0
            integer dimension(nd7),depend(nd7) :: is1
            integer dimension(nd7),depend(nd7) :: is2
            integer dimension(nd7),depend(nd7) :: is4
            integer, optional,check(len(is0)>=nd7),depend(is0) :: nd7=len(is0)
            real :: xmissp
            real :: xmisss
            integer dimension(nd5) :: ipack
            integer, optional,check(len(ipack)>=nd5),depend(ipack) :: nd5=len(ipack)
            integer :: minpk
            integer :: lx
            integer intent(out) :: ioctet
            integer :: l3264b
            integer intent(out) :: ier
        end subroutine pack1d
        subroutine pack2d(kfildo,a,ia,ic,nx,ny,is0,is1,is2,is4,nd7,xmissp,xmisss,ipack,nd5,minpk,lx,ioctet,l3264b,ier) ! in :_tdlpack:pack2d.f
            integer :: kfildo
            real dimension(nx,ny) :: a
            integer dimension(nx,ny),depend(nx,ny) :: ia
            integer dimension(nx*ny),depend(nx,ny) :: ic
            integer, optional,check(shape(a,0)==nx),depend(a) :: nx=shape(a,0)
            integer, optional,check(shape(a,1)==ny),depend(a) :: ny=shape(a,1)
            integer dimension(nd7) :: is0
            integer dimension(nd7),depend(nd7) :: is1
            integer dimension(nd7),depend(nd7) :: is2
            integer dimension(nd7),depend(nd7) :: is4
            integer, optional,check(len(is0)>=nd7),depend(is0) :: nd7=len(is0)
            real :: xmissp
            real :: xmisss
            integer dimension(nd5) :: ipack
            integer, optional,check(len(ipack)>=nd5),depend(ipack) :: nd5=len(ipack)
            integer :: minpk
            integer :: lx
            integer intent(out) :: ioctet
            integer :: l3264b
            integer intent(out) :: ier
        end subroutine pack2d
        subroutine readfile(file,lun,nd5,l3264b,ftype,ioctet,ipack,ier,id) ! in :_tdlpack:readfile.f
            character*(*) intent(in) :: file
            integer intent(in) :: lun
            integer intent(in) :: nd5
            integer intent(in) :: l3264b
            integer intent(in) :: ftype
            integer intent(out) :: ioctet
            integer dimension(nd5),intent(out),depend(nd5) :: ipack
            integer intent(out) :: ier
            integer, optional,dimension(4),intent(in) :: id
        end subroutine readfile
        subroutine writefile(file,lun,nd5,l3264b,ftype,ioctet,ipack,ier,nreplace,ncheck) ! in :_tdlpack:writefile.f
            character*(*) intent(in) :: file
            integer intent(in) :: lun
            integer, optional,intent(in),check(len(ipack)>=nd5),depend(ipack) :: nd5=len(ipack)
            integer intent(in) :: l3264b
            integer intent(in) :: ftype
            integer intent(in) :: ioctet
            integer dimension(nd5),intent(in) :: ipack
            integer intent(out) :: ier
            integer, optional,intent(in) :: nreplace
            integer, optional,intent(in) :: ncheck
        end subroutine writefile
        subroutine trail(kfildo,kfilio,l3264b,l3264w,ntotby,ntotrc,ier) ! in :_tdlpack:trail.f
            integer :: kfildo
            integer :: kfilio
            integer :: l3264b
            integer :: l3264w
            integer :: ntotby
            integer :: ntotrc
            integer :: ier
        end subroutine trail
        subroutine unpack(kfildo,ipack,iwork,data,nd5,is0,is1,is2,is4,nd7,misspx,misssx,igive,l3264b,ier) ! in :_tdlpack:unpack.f
            integer :: kfildo
            integer dimension(nd5) :: ipack
            integer dimension(nd5),depend(nd5) :: iwork
            real dimension(nd5),depend(nd5),intent(out) :: data
            integer, optional,check(len(ipack)>=nd5),depend(ipack) :: nd5=len(ipack)
            integer dimension(nd7) :: is0
            integer dimension(nd7),depend(nd7) :: is1
            integer dimension(nd7),depend(nd7) :: is2
            integer dimension(nd7),depend(nd7) :: is4
            integer, optional,check(len(is0)>=nd7),depend(is0) :: nd7=len(is0)
            integer :: misspx
            integer :: misssx
            integer :: igive
            integer :: l3264b
            integer intent(out) :: ier
        end subroutine unpack
        subroutine writep(kfildo,kfilio,ipack,nwords,ntotby,ntotrc,l3264b,ier) ! in :_tdlpack:writep.f
            integer :: kfildo
            integer :: kfilio
            integer dimension(nwords) :: ipack
            integer, optional,check(len(ipack)>=nwords),depend(ipack) :: nwords=len(ipack)
            integer :: ntotby
            integer :: ntotrc
            integer :: l3264b
            integer :: ier
        end subroutine writep
        subroutine lmijll(kfildo,xi,yj,xmeshl,orient,xlat,xlatll,xlonll,alat,alon,ier) ! in :_tdlpack:lmijll.f
            integer :: kfildo
            real :: xi
            real :: yj
            real :: xmeshl
            real :: orient
            real :: xlat
            real :: xlatll
            real :: xlonll
            real :: alat
            real :: alon
            integer :: ier
        end subroutine lmijll
        subroutine mcijll(kfildo,xi,yj,xmeshl,xlat,xlatll,xlonll,alat,alon) ! in :_tdlpack:mcijll.f
            integer :: kfildo
            real :: xi
            real :: yj
            real :: xmeshl
            real :: xlat
            real :: xlatll
            real :: xlonll
            real :: alat
            real :: alon
        end subroutine mcijll
        subroutine psijll(kfildo,xi,yj,xmeshl,orient,xlat,xlatll,xlonll,alat,alon) ! in :_tdlpack:psijll.f
            integer :: kfildo
            real :: xi
            real :: yj
            real :: xmeshl
            real :: orient
            real :: xlat
            real :: xlatll
            real :: xlonll
            real :: alat
            real :: alon
        end subroutine psijll
        subroutine gridij_to_latlon(nx,ny,mproj,xmeshl,orient,xlat,xlatll,xlonll,lats,lons,ier) ! in :_tdlpack:gridij_to_latlon.f
            integer intent(in) :: nx
            integer intent(in) :: ny
            integer intent(in) :: mproj
            real intent(in) :: xmeshl
            real intent(in) :: orient
            real intent(in) :: xlat
            real intent(in) :: xlatll
            real intent(in) :: xlonll
            real dimension(nx,ny),intent(out),depend(nx,ny) :: lats
            real dimension(nx,ny),intent(out),depend(nx,ny) :: lons
            integer intent(out) :: ier
        end subroutine gridij_to_latlon
        subroutine backspacefile(lun,ier) ! in :_tdlpack:fileaction.f
            integer intent(in) :: lun
            integer intent(out) :: ier
        end subroutine backspacefile
        subroutine rewindfile(lun,ier) ! in :_tdlpack:fileaction.f
            integer intent(in) :: lun
            integer intent(out) :: ier
        end subroutine rewindfile
    end interface 
end python module _tdlpack

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
